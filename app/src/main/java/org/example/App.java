/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.example.msg.*;

import akka.actor.ActorRef;
import akka.actor.ActorSystem;

public class App {
    public static final int N = 5;
    public static final int W = 3;
    public static final int R = 3;
    public static final int T = 9999;

    public static void main(String[] args) {
        Random rng = new Random();

        ActorSystem sistema = ActorSystem.create("MarsSystem");

        ActorRef client1 = sistema.actorOf(Client.props("Alice"));
        ActorRef client2 = sistema.actorOf(Client.props("Bob"));

        List<ActorRef> nodes = new ArrayList<>();
        for (int i=0; i<10; i++) {
            nodes.add(sistema.actorOf(Node.props(i*10)));
        }
        for (int i=0; i<10; i++) {
            ActorRef n = nodes.get(i);
            for (ActorRef node: nodes) {
                node.tell(new Node.DebugAddNodeMsg(n, i*10), n);
            }
        }

        // Set value
        nodes.get(rng.nextInt(nodes.size())).tell(new Set.InitiateMsg(5, "Mela"), client1);
        try { Thread.sleep(1000); } catch (InterruptedException e) {e.printStackTrace(); }
        // Update value
        nodes.get(rng.nextInt(nodes.size())).tell(new Set.InitiateMsg(5, "Banana"), client1);
        try { Thread.sleep(1000); } catch (InterruptedException e) {e.printStackTrace(); }
        // Read value
        nodes.get(rng.nextInt(nodes.size())).tell(new Get.InitiateMsg(5), client2);
        try { Thread.sleep(1000); } catch (InterruptedException e) {e.printStackTrace(); }

        // Join
        ActorRef newNode = sistema.actorOf(Node.props(25));
        ActorRef bootstrapping_peer = nodes.get(rng.nextInt(nodes.size()));
        bootstrapping_peer.tell(msg, newNode);

        nodes.add(newNode);

        try {
            System.out.println(">> Press Enter to End <<");
            System.in.read();
        }catch (Exception e) {}
        sistema.terminate();
    }
}
